Task 地震救灾({typeA:r1, typeB:r2}, s):
	@service: <rescuedCount>
	@topic:
	@init{
		rescuedCnt = 0 ;
		put rescuedCnt to <rescuedCount> ;
	}
	@goal{ # 解救n个人
		get rescuedCnt from <rescuedCount> ;
		rescuedCnt == s ;
	}
	@subtask:搜寻灾民, 解救灾民
	@behavior:
	@routine{
		搜寻灾民(typeA[0~r1], s);		# 子任务
	}
	|| {
		解救灾民(typeB[0~r2], s);		# 子任务
	}

Task 搜寻灾民({typeA:t1}, u):
	@service: <searchedCount> , <rescuedCount>
	@topic:
	@init: 
		searchedCnt = 0
		put searchedCnt to <searchedCount>
	@goal:	# 找到n个人
		get searchedCnt from <searchedCount>
		searchedCnt == u
	@behavior: 发现灾民并广播位置
	@routine:
		each typeA[0~t1]:						# each多线程调度单机行为，执行完行为的无人机放回each队列中
			发现灾民并广播位置(u)

Task 解救灾民({resuceUav:t2}, u):
	@service: <rescuedCount>		# < > client-server服务
	@topic:  <<targetLocation>>		# << >> pub-sub话题单播 <<< >>> pub-sub话题多播
	@init:
	@goal:
		get rescuedCnt from <rescuedCount>
		rescuedCnt == u
	@routine:
		order rescue_uav[0~t2]:
			subscribe tarLoc from <<targetLocation>>:	# 单播话题有waiting list
				unsubscribe <<targetLocation>>
				前往解救灾民(tarLoc)		# 行为

Main :
	Agent searchUav, resuceUav
	地震救灾({searchUav:5, resuceUav:10}, 20)			# 救20人，5无人侦察机，10无人直升机
